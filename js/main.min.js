const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
if (prefersDarkScheme.matches)
  var granimInstance = new Granim({
    element: "#canvas-basic",
    direction: "diagonal",
    isPausedWhenNotInView: !1,
    transitionSpeed: 1,
    states: {
      "default-state": {
        gradients: [
          ["#e63946", "#f1faee"],
          ["#a8dadc", "#457b9d"],
          ["#1d3557", "#ffbe0b"],
          ["#06d6a0", "#e09f3e"],
          ["#f15bb5", "#FA709A"],
        ],
      },
    },
  });
else
  granimInstance = new Granim({
    element: "#canvas-basic",
    direction: "diagonal",
    isPausedWhenNotInView: !1,
    transitionSpeed: 1,
    states: {
      "default-state": {
        gradients: [
          ["#e63946", "#f1faee"],
          ["#a8dadc", "#457b9d"],
          ["#1d3557", "#ffbe0b"],
          ["#06d6a0", "#e09f3e"],
          ["#f15bb5", "#FA709A"],
        ],
      },
    },
  });
document.querySelectorAll('a[href^="#"]').forEach((e) => {
  e.addEventListener("click", function (e) {
    e.preventDefault(),
      document
        .querySelector(this.getAttribute("href"))
        .scrollIntoView({ behavior: "smooth" });
  });
});

let mask = ".mask";
let maskContainer = ".mask-container";
gsap.set(mask, {
  //xPercent: -50,
  //yPercent: -50,
  // scale: 0,
  // WebkitMaskSize: `contain`,
});

/* window.addEventListener("mousemove", (e) => {
  let x = e.clientX;
  let y = e.clientY;

  gsap.to(mask, {
    duration: 0.5,
    WebkitMaskPosition: `${x}px ${y}px`,
    ease: "none",
  });
}); */
/*
const tl = gsap.timeline({
  yoyo: true,
  repeat: -1,
  duration: 5,
});

tl.to(mask, {
  WebkitMaskSize: `100px 200px`,
  yoyoEase: true,
});

tl.to(mask, {
  WebkitMaskSize: `200px 100px`,
  yoyoEase: true,
});
 */

let sections = gsap.utils.toArray(".panel");

gsap.to(sections, {
  xPercent: -100 * (sections.length - 1),
  ease: "none",
  scrollTrigger: {
    trigger: ".container",
    pin: true,
    scrub: 1,
    snap: 1 / (sections.length - 1),
    end: () => "+=" + document.querySelector(".container").offsetWidth,
  },
});
